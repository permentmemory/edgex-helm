apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: {{.Values.edgex.app.support.scheduler}}
  name: {{.Values.edgex.app.support.scheduler}}
spec:
  replicas: {{.Values.edgex.replicas.support.scheduler}}
  selector:
    matchLabels:
      org.edgexfoundry.service: {{.Values.edgex.app.support.scheduler}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        org.edgexfoundry.service: {{.Values.edgex.app.support.scheduler}}
    spec:
      containers:
      - name: {{.Values.edgex.app.support.scheduler}}
        image: {{.Values.edgex.image.support.scheduler.repository}}:{{.Values.edgex.image.support.scheduler.tag}}
        imagePullPolicy: {{.Values.edgex.image.support.scheduler.pullPolicy}}
        command: ["/support-scheduler","-cp=consul.http://edgex-core-consul.default.svc.cluster.local:8500","--registry","--confdir=/res"]
        ports:
        - containerPort: 48085
          hostPort: 48085
        env:
        - name: Service_Host
          value: {{.Values.edgex.dnsserver.support.scheduler}}
        - name: IntervalActions_ScrubPushed_Host
          value: {{.Values.edgex.dnsserver.core.data}}
        - name: IntervalActions_ScrubAged_Host
          value: {{.Values.edgex.dnsserver.core.data}}
        - name: EDGEX_SECURITY_SECRET_STORE
          value: "false"
        - name: edgex_registry
          value: consul://{{.Values.edgex.dnsserver.core.consul}}:8500
        - name: Registry_Host
          value: {{.Values.edgex.dnsserver.core.consul}}
        - name: Clients_CoreData_Host
          value: {{.Values.edgex.dnsserver.core.data}}
        - name:  Clients_Metadata_Host
          value: {{.Values.edgex.dnsserver.core.metadata}}
        - name: Clients_Notifications_Host
          value: {{.Values.edgex.dnsserver.support.notifications}}
        - name: Clients_Command_Host
          value: {{.Values.edgex.dnsserver.core.command}}
        - name: Clients_Scheduler_Host
          value: {{.Values.edgex.dnsserver.support.scheduler}}
        - name: Clients_RulesEngine_Host
          value: {{.Values.edgex.dnsserver.support.rulesengine}}
        - name: Clients_VirtualDevice_Host
          value: {{.Values.edgex.dnsserver.device.virtual}}
        - name: Databases_Primary_Host
          value: {{.Values.edgex.dnsserver.redis}}
        - name: Logging_EnableRemote
          value: "false"
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: 48085
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: 48085
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
      {{- if .Values.edgex.resources.support.scheduler.enforceLimits }}
        resources:
          limits:
            memory: {{ .Values.edgex.resources.support.scheduler.limits.memory }}
            cpu: {{ .Values.edgex.resources.support.scheduler.limits.cpu }}
          requests:
            memory: {{ .Values.edgex.resources.support.scheduler.requests.memory }}
            cpu: {{ .Values.edgex.resources.support.scheduler.requests.cpu }}
      {{- end}}
      hostname: {{.Values.edgex.app.support.scheduler}}
      restartPolicy: Always
status: {}
